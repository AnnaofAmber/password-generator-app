{"mappings":"ACEA,MAAM,EAAa,SAAS,aAAA,CAAc,iBACpC,EAAc,SAAS,aAAA,CAAc,kBAC3C,IAAI,EAAQ,AAAiC,QAAjC,SAAS,eAAA,CAAgB,GAAA,CAmBnC,EAAW,gBAAA,CAAiB,QAjB9B,SAA2B,CAAC,EACxB,IAAI,EAAS,EAAE,MAAf,AACsB,CAAA,UAAlB,EAAE,MAAA,CAAO,IAAA,EACX,CAAA,EAAS,SAAS,cAAA,CAAe,mBADnC,EAGA,IAAM,EAAM,EAAO,GAAnB,CACM,EAAM,EAAO,GAAnB,CACM,EAAM,EAAO,KAAnB,AACA,CAAA,EAAY,WAAA,CAAc,EAC1B,IAAI,EAAc,AAAA,CAAA,EAAM,CAAA,EAAO,IAAO,CAAA,EAAM,CAAA,EACxC,GACF,CAAA,EAAc,EAAM,CADtB,EAIA,EAAO,KAAA,CAAM,cAAA,CAAiB,EAAa,QAC7C,GAcA,MAAM,EAAW,IAAI,iBATrB,8DAA8D;AAC9D,SAAkB,CAAY,CAAE,CAAQ,EAAK,EAAa,OAAA,CAAQ,SAAS,CAAQ,EACzD,eAAlB,EAAS,IAAA,EAAyB,AAA2B,QAA3B,EAAS,aAAA,EAC7C,CAAA,EAAQ,AAAwB,QAAxB,EAAS,MAAA,CAAO,GAAA,AAD1B,CAGF,EACF,GAIA,EAAS,OAAA,CAAQ,SAAS,eAAA,CAAiB,CAAC,WAAY,CAAA,CAAI,EAK7D;;;;CAIA,EAED,MAAM,EAAO,SAAS,aAAA,CAAc,SAC9B,EAAW,SAAS,cAAA,CAAe,UAkBzC,EAAS,gBAAA,CAAiB,SAX1B,SAAiB,CAAC,EACb,EAAE,aAAA,CAAc,OAAA,CACjB,EAAK,SAAA,CAAU,GAAA,CAAI,cALrB,EAAK,SAAA,CAAY,EAUjB,wBAAuB;AAEzB,E,4D","sources":["<anon>","src/js/index.js"],"sourcesContent":["var $85a5f86b715fe7db$exports = {};\nconst $85a5f86b715fe7db$var$inputRange = document.querySelector(\".input-length\");\nconst $85a5f86b715fe7db$var$lengthValue = document.querySelector(\".number-length\");\nlet $85a5f86b715fe7db$var$isRTL = document.documentElement.dir === \"rtl\";\nfunction $85a5f86b715fe7db$var$handleInputChange(e) {\n    let target = e.target;\n    if (e.target.type !== \"range\") target = document.getElementById(\"character-length\");\n    const min = target.min;\n    const max = target.max;\n    const val = target.value;\n    $85a5f86b715fe7db$var$lengthValue.textContent = val;\n    let percentage = (val - min) * 100 / (max - min);\n    if ($85a5f86b715fe7db$var$isRTL) percentage = max - val;\n    target.style.backgroundSize = percentage + \"% 100%\";\n}\n$85a5f86b715fe7db$var$inputRange.addEventListener(\"input\", $85a5f86b715fe7db$var$handleInputChange);\n// Handle element change, check for dir attribute value change\nfunction $85a5f86b715fe7db$var$callback(mutationList, observer) {\n    mutationList.forEach(function(mutation) {\n        if (mutation.type === \"attributes\" && mutation.attributeName === \"dir\") $85a5f86b715fe7db$var$isRTL = mutation.target.dir === \"rtl\";\n    });\n}\nconst $85a5f86b715fe7db$var$observer = new MutationObserver($85a5f86b715fe7db$var$callback);\n$85a5f86b715fe7db$var$observer.observe(document.documentElement, {\n    attributes: true\n});\n/**\n   |============================\n   |dark theme\n   |============================\n */ const $85a5f86b715fe7db$var$body = document.querySelector(\".body\");\nconst $85a5f86b715fe7db$var$switcher = document.getElementById(\"toggle\");\nfunction $85a5f86b715fe7db$var$onDark() {\n    $85a5f86b715fe7db$var$body.className = \"\";\n}\nfunction $85a5f86b715fe7db$var$onLigth(e) {\n    if (e.currentTarget.checked) $85a5f86b715fe7db$var$body.classList.add(\"body-ligth\");\n    else $85a5f86b715fe7db$var$onDark();\n// body.className = \"\";\n}\n$85a5f86b715fe7db$var$switcher.addEventListener(\"change\", $85a5f86b715fe7db$var$onLigth);\n\n\n//# sourceMappingURL=index.26ff03d9.js.map\n","\n\nconst inputRange = document.querySelector('.input-length')\nconst lengthValue = document.querySelector('.number-length')\nlet isRTL = document.documentElement.dir === 'rtl'\n\nfunction handleInputChange(e) {\n    let target = e.target\n    if (e.target.type !== 'range') {\n      target = document.getElementById('character-length')\n    } \n    const min = target.min\n    const max = target.max\n    const val = target.value\n    lengthValue.textContent = val\n    let percentage = (val - min) * 100 / (max - min)\n    if (isRTL) {\n      percentage = (max - val) \n    }\n    \n    target.style.backgroundSize = percentage + '% 100%'\n  }\n  \n  inputRange.addEventListener('input', handleInputChange)\n  \n  \n  // Handle element change, check for dir attribute value change\n  function callback(mutationList, observer) {  mutationList.forEach(function(mutation) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'dir') {\n        isRTL = mutation.target.dir === 'rtl'\n      }\n    })\n  }\n  \n  \n  const observer = new MutationObserver(callback)\n  observer.observe(document.documentElement, {attributes: true})\n\n\n\n\n /**\n   |============================\n   |dark theme\n   |============================\n */\n\nconst body = document.querySelector('.body');\nconst switcher = document.getElementById('toggle')\n\n\nfunction onDark() {\n  body.className = \"\";\n}\n\nfunction onLigth(e){\n  if(e.currentTarget.checked){\n    body.classList.add(\"body-ligth\");\n  }\n  else{\n    onDark()\n  }\n  // body.className = \"\";\n \n}\n\nswitcher.addEventListener('change', onLigth)"],"names":["$85a5f86b715fe7db$var$inputRange","document","querySelector","$85a5f86b715fe7db$var$lengthValue","$85a5f86b715fe7db$var$isRTL","documentElement","dir","addEventListener","e","target","type","getElementById","min","max","val","value","textContent","percentage","style","backgroundSize","$85a5f86b715fe7db$var$observer","MutationObserver","mutationList","observer","forEach","mutation","attributeName","observe","attributes","$85a5f86b715fe7db$var$body","$85a5f86b715fe7db$var$switcher","currentTarget","checked","classList","add","className"],"version":3,"file":"index.26ff03d9.js.map"}